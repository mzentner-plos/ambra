<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2006-2013 by Public Library of Science http://plos.org http://ambraproject.org
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <import resource="classpath*:org/ambraproject/action/hibernate-context.xml"/>

  <bean id="jmsFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
    <property name="brokerURL" value="vm://localhost?broker.persistent=false&amp;broker.useJmx=false"/>
  </bean>

  <bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
    <property name="connectionFactory" ref="jmsFactory"/>
  </bean>

  <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
    <property name="connectionFactory" ref="jmsFactory"/>
    <property name="transactionManager" ref="jmsTransactionManager"/>
    <property name="transacted" value="true"/>
    <property name="concurrentConsumers" value="1"/>
  </bean>

  <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="jmsConfig"/>
  </bean>

  <bean id="placeholderConfig"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:dummyCrossRef.properties</value>
      </list>
    </property>
    <property name="ignoreResourceNotFound" value="true"/>
  </bean>

  <bean id="rolesEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName" value="RolesCache"/>
  </bean>

  <bean id="rolesCache" class="org.ambraproject.service.cache.EhcacheProvider">
    <constructor-arg index="0" ref="rolesEhCache"/>
  </bean>

  <bean id="permissionsService" class="org.ambraproject.service.permission.PermissionsServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="rolesCache" ref="rolesCache"/>
  </bean>

  <bean id="mockHttpClient" class="org.apache.commons.httpclient.HttpClientMock">
    <!-- Fake response code and body defined below -->
    <constructor-arg index="0" value="200"/>
    <!-- Fake response for crossref -->
    <!--<constructor-arg index="1" value="test-response-isbn|test-response-title|test-response-firstAuthor|test-response-volume|1|4|2012|test-response-resourceType|test-response-key|10.33002/fkfkdaa.103033fkfkf/fff"/>-->
    <constructor-arg index="1" value="{ &quot;results&quot;: [ { &quot;text&quot;: &quot;Rober AS,Herpetichthyes, Amphibioidei, Choanichthyes, or Sarcopterygii?;Nature;176;126&quot;,&quot;match&quot;: true, &quot;doi&quot;: &quot;10.1038/176126a0&quot;, &quot;score&quot;: 5.8360705 } ], &quot;query_ok&quot;: true }"/>
  </bean>

  <bean id="crossRefLookupService" class="org.ambraproject.service.crossref.CrossRefLookupServiceImpl">
    <property name="httpClient" ref="mockHttpClient"/>
    <property name="crossRefUrl" value="${ambra.services.crossref.query.url}"/>
  </bean>

  <bean id="articleService" class="org.ambraproject.service.article.ArticleServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="permissionsService" ref="permissionsService"/>
    <property name="crossRefLookupService" ref="crossRefLookupService"/>
  </bean>

  <bean id="ambraConfiguration" class="org.ambraproject.testutils.AmbraTestConfigurationFactory"
        factory-method="getConfiguration">
    <constructor-arg index="0" value="ambra-test-config.xml"/>
  </bean>

  <bean id="routeBuilder" class="org.ambraproject.routes.CrossRefLookupRoutes"
    depends-on="activemq, articleService"/>

  <camelContext xmlns="http://camel.apache.org/schema/spring">
    <jmxAgent id="ambra-queue" disabled="true"/>
    <routeBuilder ref="routeBuilder"/>
  </camelContext>

</beans>
